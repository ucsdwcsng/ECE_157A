id: ofdm_alamouti_cc
label: Alamouti / MIMO
category: '[ofdm]'

templates:
  imports: import ofdm
  make: ofdm.alamouti_cc(${p_xy},${std_dev},${mimo_option})
  callbacks:
    - set_noise(${std_dev})
    - set_p_xy(${p_xy})
    - set_mimo_option(${mimo_option})

#  Make one 'parameters' list entry for every parameter you want settable from the GUI.
#     Keys include:
#     * id (makes the value accessible as \$keyname, e.g. in the make entry)
#     * label (label shown in the GUI)
#     * dtype (e.g. int, float, complex, byte, short, xxx_vector, ...)
parameters:
- id: std_dev
  label: Noise Std. Dev
  dtype: float
- id: p_xy
  label: Correlation p_xy
  dtype: float
- id: mimo_option
  label: MIMO Option
  dtype: int

#  Make one 'inputs' list entry per input and one 'outputs' list entry per output.
#  Keys include:
#      * label (an identifier for the GUI)
#      * domain (optional - stream or message. Default is stream)
#      * dtype (e.g. int, float, complex, byte, short, xxx_vector, ...)
#      * vlen (optional - data stream vector length. Default is 1)
#      * optional (optional - set to 1 for optional inputs. Default is 0)
inputs:
- label: in
  domain: stream
  dtype: complex

outputs:
- label: out1
  domain: stream
  dtype: complex
- label: out2
  domain: stream
  dtype: complex
- label: out3
  domain: stream
  dtype: float

#  'file_format' specifies the version of the GRC yml format used in the file
#  and should usually not be changed.
file_format: 1
